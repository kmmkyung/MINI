{"ast":null,"code":"export default {\n  name: \"CitySelector\",\n  data() {\n    return {\n      cities: [{\n        Latitude: 37,\n        Longitude: 135,\n        label: 'Seoul',\n        selected: false\n      }, {\n        Latitude: 0,\n        Longitude: 135,\n        label: 'A',\n        selected: false\n      }, {\n        Latitude: 0,\n        Longitude: 135,\n        label: 'B',\n        selected: false\n      }, {\n        Latitude: 35,\n        Longitude: 135,\n        label: 'C',\n        selected: false\n      }, {\n        Latitude: 50,\n        Longitude: 10,\n        label: 'D',\n        selected: false\n      }, {\n        Latitude: 35,\n        Longitude: 135,\n        label: 'F',\n        selected: false\n      }, {\n        Latitude: 50,\n        Longitude: 10,\n        label: 'G',\n        selected: false\n      }]\n    };\n  },\n  methods: {\n    selectCity(city) {\n      city.selected = !city.selected;\n      this.$emit(\"selectCity\", city);\n    }\n  }\n};","map":{"version":3,"names":["name","data","cities","Latitude","Longitude","label","selected","methods","selectCity","city","$emit"],"sources":["/Users/minkyungkim/Documents/GitHub/PJ-MINI/vue-Weather/weather-app/src/components/weather/CitySelector.vue"],"sourcesContent":["<template>\n  <div>\n    <ul class=\"city-selector\">\n      <li @click=\"selectCity(city)\" :class=\"{isSelected: city.selected}\" v-for=\"city in cities\" :key=\"city.label\">{{ city.label }}</li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  export default {\n    name:\"CitySelector\",\n    data(){\n      return{\n        cities:[\n          {Latitude:37,Longitude:135,label:'Seoul',selected:false},\n          {Latitude:0,Longitude:135,label:'A',selected:false,},\n          {Latitude:0,Longitude:135,label:'B',selected:false,},\n          {Latitude:35,Longitude:135,label:'C',selected:false,},\n          {Latitude:50,Longitude:10,label:'D',selected:false,},\n          {Latitude:35,Longitude:135,label:'F',selected:false,},\n          {Latitude:50,Longitude:10,label:'G',selected:false,}\n        ]\n      }\n    },\n    methods:{\n      selectCity(city){\n        city.selected = !city.selected; \n        this.$emit(\"selectCity\",city)\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .city-selector{\n    display: grid;\n    grid-template-columns: repeat(5,1fr);\n\n    li{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      border: 0.1em solid #efefef;\n      padding: 0.3em;\n      cursor: pointer;\n\n      &:hover{\n        background: #fd1d1d;\n        color: #ffffff;\n      }\n    }\n  }\n  .isSelected{\n    background: #fd1d1d;\n    color: #ffffff;\n  }\n</style>"],"mappings":"AASE,eAAe;EACbA,IAAI,EAAC,cAAc;EACnBC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,MAAM,EAAC,CACL;QAACC,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,OAAO;QAACC,QAAQ,EAAC;MAAK,CAAC,EACxD;QAACH,QAAQ,EAAC,CAAC;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACpD;QAACH,QAAQ,EAAC,CAAC;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACpD;QAACH,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACrD;QAACH,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,EAAE;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACpD;QAACH,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACrD;QAACH,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,EAAE;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM;IAEvD;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,UAAUA,CAACC,IAAI,EAAC;MACdA,IAAI,CAACH,QAAO,GAAI,CAACG,IAAI,CAACH,QAAQ;MAC9B,IAAI,CAACI,KAAK,CAAC,YAAY,EAACD,IAAI;IAC9B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}