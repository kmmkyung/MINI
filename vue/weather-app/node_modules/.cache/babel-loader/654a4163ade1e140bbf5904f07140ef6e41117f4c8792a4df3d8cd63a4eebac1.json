{"ast":null,"code":"export default {\n  name: \"CitySelector\",\n  data() {\n    return {\n      cities: [{\n        Latitude: 37,\n        Longitude: 135,\n        label: 'Seoul',\n        selected: false\n      }, {\n        Latitude: 0,\n        Longitude: 135,\n        label: 'A',\n        selected: false\n      }, {\n        Latitude: 0,\n        Longitude: 135,\n        label: 'B',\n        selected: false\n      }, {\n        Latitude: 35,\n        Longitude: 135,\n        label: 'C',\n        selected: false\n      }, {\n        Latitude: 50,\n        Longitude: 10,\n        label: 'D',\n        selected: false\n      }, {\n        Latitude: 35,\n        Longitude: 135,\n        label: 'F',\n        selected: false\n      }, {\n        Latitude: 50,\n        Longitude: 10,\n        label: 'G',\n        selected: false\n      }]\n    };\n  },\n  methods: {\n    selectCity(city) {\n      city.selected = !city.selected;\n      this.$emit(\"selectCity\", city);\n    }\n  }\n};","map":{"version":3,"names":["name","data","cities","Latitude","Longitude","label","selected","methods","selectCity","city","$emit"],"sources":["c:\\Users\\A\\Documents\\GitHub\\PJ-MINI\\01.vue\\weather-app\\src\\components\\weather\\CitySelector.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <ul class=\"city-selector\">\r\n      <li @click=\"selectCity(city)\" :class=\"{isSelected: city.selected}\" v-for=\"city in cities\" :key=\"city.label\">{{ city.label }}</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name:\"CitySelector\",\r\n    data(){\r\n      return{\r\n        cities:[\r\n          {Latitude:37,Longitude:135,label:'Seoul',selected:false},\r\n          {Latitude:0,Longitude:135,label:'A',selected:false,},\r\n          {Latitude:0,Longitude:135,label:'B',selected:false,},\r\n          {Latitude:35,Longitude:135,label:'C',selected:false,},\r\n          {Latitude:50,Longitude:10,label:'D',selected:false,},\r\n          {Latitude:35,Longitude:135,label:'F',selected:false,},\r\n          {Latitude:50,Longitude:10,label:'G',selected:false,}\r\n        ]\r\n      }\r\n    },\r\n    methods:{\r\n      selectCity(city){\r\n        city.selected = !city.selected; \r\n        this.$emit(\"selectCity\",city)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .city-selector{\r\n    display: grid;\r\n    grid-template-columns: repeat(5,1fr);\r\n\r\n    li{\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      border: 0.1em solid #efefef;\r\n      padding: 0.3em;\r\n      cursor: pointer;\r\n\r\n      &:hover{\r\n        background: #fd1d1d;\r\n        color: #ffffff;\r\n      }\r\n    }\r\n  }\r\n  .isSelected{\r\n    background: #fd1d1d;\r\n    color: #ffffff;\r\n  }\r\n</style>"],"mappings":"AASE,eAAe;EACbA,IAAI,EAAC,cAAc;EACnBC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,MAAM,EAAC,CACL;QAACC,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,OAAO;QAACC,QAAQ,EAAC;MAAK,CAAC,EACxD;QAACH,QAAQ,EAAC,CAAC;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACpD;QAACH,QAAQ,EAAC,CAAC;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACpD;QAACH,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACrD;QAACH,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,EAAE;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACpD;QAACH,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,GAAG;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM,CAAC,EACrD;QAACH,QAAQ,EAAC,EAAE;QAACC,SAAS,EAAC,EAAE;QAACC,KAAK,EAAC,GAAG;QAACC,QAAQ,EAAC;MAAM;IAEvD;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,UAAUA,CAACC,IAAI,EAAC;MACdA,IAAI,CAACH,QAAO,GAAI,CAACG,IAAI,CAACH,QAAQ;MAC9B,IAAI,CAACI,KAAK,CAAC,YAAY,EAACD,IAAI;IAC9B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}